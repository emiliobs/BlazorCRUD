@page "/indice-personas"
@inject HttpClient Http
@inject IJSRuntime JS


    <h3>Personas</h3>
<div  style="margin-bottom:4px;">
    <a href="crear-persona" class="btn btn-success">Nueva Persona.</a>
</div>

@if (Personas == null)
{
    <text>Cargando......</text>
}
else if(Personas.Length == 0)
{
    <text>No Hay Personas en la base de datos.</text>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th></th>
               
                
            </tr>
        </thead>
        <tbody>
            @foreach (var persona in Personas)
            {
            <tr>
                <td>
                    @persona.Id
                </td>
                <td>
                    @persona.Name
                </td>
               
                <td>
                    <a class="btn btn-success" href="editar-persona/@persona.Id">Editar</a> |
                    <button class="btn btn-danger" @onclick="@(() =>  BorrarPersona(persona.Id))">Borrar</button>
                </td>
                
            </tr>
            }
        </tbody>
    </table>
}

@code {

    Persona[] Personas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarPersonas();
    }

    async Task CargarPersonas()
    {
        Personas = await Http.GetJsonAsync<Persona[]>("Personas");

        //Personas = new Persona[]
        //{
        //    new Persona{ Id = 1, Name = "Emilio Barrera" },
        //    new Persona{ Id = 2, Name = "Carla Miranda" },
        //    new Persona{ Id = 3, Name = "Chalsy Hermosa" },
        //};
    }

    async Task BorrarPersona(int idPersona)
    {
        var personaSeleccionada = Personas.First(p => p.Id == idPersona);
        string mensajeConfirmacion = $"¿Deseas borrar a la persona {personaSeleccionada.Name}?";

        if (await JS.InvokeAsync<bool>("confirm", mensajeConfirmacion))
        {
            await Http.DeleteAsync($"Personas/{idPersona}");

            await CargarPersonas();
        }

        
    }
}
